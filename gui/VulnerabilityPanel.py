#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.


import wx
import armid
from BasePanel import BasePanel
from Borg import Borg
from VulnerabilityEnvironmentPanel import VulnerabilityEnvironmentPanel

class VulnerabilityPanel(BasePanel):
  def __init__(self,parent):
    BasePanel.__init__(self,parent,armid.VULNERABILITY_ID)
    b = Borg()
    self.dbProxy = b.dbProxy
   
  def buildControls(self,isCreate,isUpdateable=True): 
    mainSizer = wx.BoxSizer(wx.VERTICAL)
    mainSizer.Add(self.buildTextSizer('Name',(87,30),armid.VULNERABILITY_TEXTNAME_ID),0,wx.EXPAND)
    mainSizer.Add(self.buildTagCtrlSizer((87,30),armid.VULNERABILITY_TAGS_ID),0,wx.EXPAND)
    vulTypes = self.dbProxy.getDimensionNames('vulnerability_type')
    mainSizer.Add(self.buildComboSizerList('Type',(87,30),armid.VULNERABILITY_COMBOTYPE_ID,vulTypes),0,wx.EXPAND)
    mainSizer.Add(self.buildMLTextSizer('Description',(87,60),armid.VULNERABILITY_TEXTDESCRIPTION_ID),1,wx.EXPAND)
    mainSizer.Add(VulnerabilityEnvironmentPanel(self,self.dbProxy),1,wx.EXPAND)
    if (isUpdateable):
      mainSizer.Add(self.buildCommitButtonSizer(armid.VULNERABILITY_BUTTONCOMMIT_ID,isCreate),0,wx.ALIGN_CENTER)
    self.SetSizer(mainSizer)

  def loadControls(self,vulnerability,isReadOnly = False):
    nameCtrl = self.FindWindowById(armid.VULNERABILITY_TEXTNAME_ID)
    typeCtrl = self.FindWindowById(armid.VULNERABILITY_COMBOTYPE_ID)
    dnCtrl = self.FindWindowById(armid.VULNERABILITY_TEXTDESCRIPTION_ID)
    tagsCtrl = self.FindWindowById(armid.VULNERABILITY_TAGS_ID)
    environmentCtrl = self.FindWindowById(armid.VULNERABILITY_PANELENVIRONMENT_ID)


    nameCtrl.SetValue(vulnerability.name())
    typeCtrl.SetValue(vulnerability.type())
    dnCtrl.SetValue(vulnerability.description())
    tagsCtrl.set(vulnerability.tags())
    environmentCtrl.loadControls(vulnerability) 
